// 예시 가수 데이터 (총 30명)
const singers = [
    { id: 1, name: '나훈아' },
    { id: 2, name: '이미자' },
    { id: 3, name: '남진' },
    { id: 4, name: '김연자' },
    { id: 5, name: '설운도' },
    { id: 6, name: '주현미' },
    { id: 7, name: '태진아' },
    { id: 8, name: '송가인' },
    { id: 9, name: '임영웅' },
    { id: 10, name: '장윤정' },
    { id: 11, name: '진성' },
    { id: 12, name: '영탁' },
    { id: 13, name: '홍진영' },
    { id: 14, name: '박현빈' },
    { id: 15, name: '김용임' },
    { id: 16, name: '신유' },
    // 추가된 가수
    { id: 17, name: '김수희' },
    { id: 18, name: '현철' },
    { id: 19, name: '조항조' },
    { id: 20, name: '강진' },
    { id: 21, name: '문주란' },
    { id: 22, name: '최진희' },
    { id: 23, name: '오승근' },
    { id: 24, name: '박상철' },
    { id: 25, name: '유지나' },
    { id: 26, name: '배일호' },
    { id: 27, name: '하춘화' },
    { id: 28, name: '심수봉' },
    { id: 29, name: '이찬원' },
    { id: 30, name: '정동원' },
];

// 예시 가수별 대표곡 데이터 (기존 10곡 -> 20곡으로 확장, 신규 가수 추가)
const songsBySinger = {
    '나훈아': ['테스형!', '무시로', '사랑', '갈무리', '울긴 왜 울어', '영영', '잡초', '고향역', '홍시', '사내', '공', '내게 애인이 생겼어요', '18세 순이', '가지마오', '머나먼 고향', '청춘을 돌려다오', '해변의 여인', '물레방아 도는데', '대동강 편지', '고장난 벽시계'],
    '이미자': ['동백아가씨', '섬마을 선생님', '기러기 아빠', '여자의 일생', '황포돛대', '흑산도 아가씨', '서울이여 안녕', '노래는 나의 인생', '아씨', '빙점', '내 삶의 이유 있음은', '찔레꽃', '정동대감', '모정', '정든 섬', '두견새 우는 사연', '내 고향 진주', '낭주골 처녀', '유달산아 말해다오', '먼 데서 오신 손님'],
    '남진': ['님과 함께', '가슴 아프게', '빈잔', '둥지', '미워도 다시 한번', '그대여 변치마오', '모르리', '나야 나', '저리 가', '파트너', '울려고 내가 왔나', '마음이 고와야지', '사랑하고 싶어요', '이력서', '빈 지게', '젊은 초원', '우수', '아무 말도 하지 말아요', '가시려나', '너와 나'],
    '김연자': ['아모르 파티', '수은등', '십분 내로', '진정인가요', '정든 님', '밤열차', '천하장사', '씨름의 노래', '영동부르스', '가요 메들리', '쟁이쟁이', '수은등', '당신은 어디 있나요', '묻지 마세요', '블링블링', '인생은 다 그런거야', '타이틀', '고향 얼굴', '당신의 의미', '해변의 여인 (리메이크)'],
    '설운도': ['다함께 차차차', '사랑의 트위스트', '쌈바의 여인', '여자 여자 여자', '누이', '잃어버린 30년', '나침반', '보랏빛 엽서', '춘자야', '귀여운 여인', '원점', '마음이 울적해서', '사랑이 이런 건가요', '미련의 블루스', '보라빛 연서', '애인이 돼 주세요', '보고싶다 내 사랑', '장미같은 여자', '갈매기 사랑', '터미널'],
    '주현미': ['신사동 그 사람', '짝사랑', '비 내리는 영동교', '또 만났네요', '울면서 후회하네', '잠깐만', '정말 좋았네', '추억으로 가는 당신', '러브레터', '눈물의 부르스', '여정', '첫정', '사랑이 오네', '그냥 가세요', '인생유정', '내일 가면 안되나요', '월미도', '사랑한다면', '어제같은 이별', '울어라 열풍아'],
    '태진아': ['사랑은 아무나 하나', '옥경이', '동반자', '미안 미안해', '잘 살거야', '진진자라', '거울도 안보는 여자', '노부부의 노래', '사모곡', '애인', '가버린 사랑', '사랑은 장난이 아니야', '사랑은 눈물이라 말하지', '바보', '아줌마', '이유가 뭘까', '인생2막', '오늘도 살아야하니까', '사람팔자', '자기가 좋아'],
    '송가인': ['가인이어라', '엄마 아리랑', '무명배우', '서울의 달', '트로트가 나는 좋아요', '한 많은 대동강', '용두산 엘레지', '단장의 미아리 고개', '이별의 부산 정거장', '월하가약', '찍어', '비 내리는 금강산', '밤차에서', '내 마음의 사진', '사랑에 빠져봅시다', '장미빛 스카프', '거문고야', '기억 저편에', '화류춘몽', '영동 블루스'],
    '임영웅': ['이제 나만 믿어요', '별빛 같은 나의 사랑아', 'HERO', '사랑은 늘 도망가', '다시 만날 수 있을까', '우리들의 블루스', '무지개', '아버지', 'A bientot', 'London Boy', '폴라로이드', '연애편지', '보금자리', '인생찬가', '사랑해 진짜', '손이 참 곱던 그대', '사랑역', '계단 말고 엘리베이터', '미워요', '소나기'],
    '장윤정': ['어머나', '짠짜라', '꽃', '초혼', '이따 이따요', '첫사랑', '사랑아', '목포행 완행열차', '돼지토끼', '옆집 누나', '콩깍지', '반창고', '약속', '올래', '애가 타', '당신편', '남진', '불나비', '바람길', '세월아'],
    '진성': ['안동역에서', '보릿고개', '태클을 걸지마', '님의 등불', '가지마', '동전 인생', '내가 바보야', '잊을 수 없는 영아', '울 엄마', '님의 사랑', '채석강', '못난놈', '내가 더 아플게', '건배', '기도합니다', '용산역 광장', '안돼요 안돼', '고향 아줌마', '둥지가 되어줄게', '희야'],
    '영탁': ['찐이야', '니가 왜 거기서 나와', '막걸리 한잔', '이불', '누나가 딱이야', '사내', '전복 먹으러 갈래', '신사답게', '한량가', '담', '머선129', '갈색추억', '옆집오빠', '꼰대라떼', '추억으로 가는 당신 (리메이크)', '우리 정말 나쁘다', '옥탑방', '달의 연인', '바람의 노래', '아내'],
    '홍진영': ['사랑의 배터리', '잘가라', '오늘 밤에', '엄지 척', '산다는 건', '사랑은 꽃잎처럼', '따르릉', '부기맨', '사랑이 좋아', '월량대표아적심', '눈물비', '비바 라 비다', '내가 왜 이럴까', '내 사랑', '사랑의 와이파이', '엄마', '술 한잔 해요', '사랑은 다 이러니', '스며드나봐', '봄'],
    '박현빈': ['샤방샤방', '곤드레 만드레', '오빠만 믿어', '대찬 인생', '앗! 뜨거', '빠라빠빠', '춘향아', '넌 너무 예뻐', '한판 붙자', '모래시계', '가족', '앗 뜨거 (Remix)', '남자답게', '쾌지나 칭칭', '나는 남자다', '그대에게', '수리수리 술술', '고백', '실컷 울어라', '내 사랑'],
    '김용임': ['부초같은 인생', '사랑의 밧줄', '내 사랑 그대여', '빙빙빙', '오늘이 젊은 날', '열두 줄', '훨훨훨', '사랑님', '내장산', '고향 가는 길', '의사 선생님', '나이야 가라', '비익조', '울지마라 세월아', '부초', '사랑 여행', '인생 시계', '고장난 벽시계', '사랑은 나비인가봐', '꽃바람'],
    '신유': ['시계바늘', '꽃물', '잠자는 공주', '일소일소 일노일노', '반', '나쁜 남자', '토닥토닥', '사치기 사치기', '오르락 내리락', '애가', '광안리 수첩', '세월은 가도', '사랑해', '미안해서 미안해서', '사랑의 강도', '나 좀 봐', '가슴 아프게', '세월강', '이별의 약속'],
    '김수희': ['남행열차', '애모', '멍에', '잃어버린 정', '너무합니다', '화등', '정거장', '광야', '서울여자', '다시 한번 생각해줘요', '지금은 가지 마세요', '못 잊어', '꼬마 인형', '내 곁에 있어줘', '서울의 밤', '고독한 연인', '남포동 부르스', '자존심은 두고 떠나라', '우리는 타인', '잊어야 할 사람'],
    '현철': ['봉선화 연정', '사랑은 나비인가봐', '앉으나 서나 당신 생각', '내 마음 별과 같이', '싫다 싫어', '청춘을 돌려다오', '사랑의 이름표', '항구의 마지막 밤', '고장난 벽시계', '아미새', '못난 내 청춘', '추억의 테헤란로', '인생은 드라마야', '사랑은 눈물인가봐', '들국화 여인', '기억', '사랑은 무죄', '바보같은 사나이', '사랑에 푹 빠졌나봐', '나쁜 사람이야'],
    '조항조': ['남자라는 이유로', '만약에', '거짓말', '사랑찾아 인생찾아', '고맙소', '사나이 눈물', '가지마', '때', '빈손', '천상화', '기다림', '백년지기', '사랑꽃', '걱정마라 지나간다', '사랑은 아무나 하는게 아니야', '옹이', '이별의 마지막 밤', '당신 때문에', '사랑이 길을 잃어서', '인생아 고맙다'],
    '강진': ['땡벌', '막걸리 한잔', '삼각관계', '화장을 지우는 여자', '연하의 남자', '붓', '공짜', '달도 밝은데', '내 인생의 마지막 여자', '라라라', '오늘도 좋은날', '사랑이 오네', '못 잊을 건 정', '이별의 순서', '세월아 너는', '인연', '가슴으로 울었네', '못잊을 여자', '저 하늘 별을 찾아', '당신을 사랑합니다'],
    '문주란': ['남자는 여자를 귀찮게 해', '동숙의 노래', '돌지 않는 풍차', '백치 아다다', '내 마지막 사랑', '공항의 이별', '타인들', '꼭 필요합니다', '아마다미아', '파초의 꿈', '애수의 부르스', '기억의 빈자리', '사랑의 그림자', '내 너를 부른다', '당신이 있으니까', '사랑이란 두 글자', '명동 아가씨', '안개 속의 두 그림자', '가지마오', '보슬비 오는 거리'],
    '최진희': ['사랑의 미로', '천상재회', '우린 너무 쉽게 헤어졌어요', '여정', '물보라', '미련을 두고', '카페에서', '꼬마 인형', '그대는 나의 인생', '가져가', '슬픈 고백', '미워도 미워말아요', '바람에 흔들리고 비에 젖어도', '상처', '가버린 당신', '다시 한번 울었네', '사랑은 어떻게 생겼을까', '내게 다시 사랑을', '당신의 모습', '사랑의 열쇠'],
    '오승근': ['내 나이가 어때서', '있을 때 잘해', '떠나는 님아', '빗속을 둘이서', '장미꽃 한 송이', '처녀 뱃사공', '사랑했지만', '즐거운 인생', '하늘의 여자', '인생 뭐 있나', '청춘아 어디갔니', '주인공은 나야나', '내 사랑 등대', '그대가 나를', '길', '인생은 바람', '남자의 사랑', '꽃반지 끼고', '사랑 참 어렵다', '고향이 좋아'],
    '박상철': ['무조건', '황진이', '자옥아', '빵빵', '노래방', '항구의 남자', '바보같지만', '꽃바람', '쿵짝쿵짝', '너무 예뻐', '미워요', '부메랑', '고향역', '남자의 눈물', '울 엄마', '바라본다', '사랑의 번호키', '가슴은 알죠', '일백년', '해뜰날'],
    '유지나': ['미운 사내', '고추', '무슨 사랑', '쓰리랑', '속 깊은 여자', '기댈 곳 하나 없네', '저 하늘 별을 찾아', '쇼', '나비', '한 오백년', '선남선녀', '아이 러브 유', '돈 돈 돈', '인생 길', '비상', '내 청춘아', '가슴앓이', '꽃타령', '그 사람 당신', '님아'],
    '배일호': ['신토불이', '99.9', '장모님', '꽃보다 아름다운 너', '늦기 전에', '폼나게 살거야', '친구야', '순이야', '남자도 운다', '정말로 진짜로', '오뚝이 인생', '아지랑이', '아버지의 강', '왔다 갔다', '당신이 원하신다면', '나만큼 당신을', '인생은 드라마', '콕 박혔네', '쨍하고 해뜰날', '사랑했기에'],
    '하춘화': ['날 버린 남자', '영암 아리랑', '물새 한 마리', '잘했군 잘했어', '연포 아가씨', '강원도 아리랑', '호반에서 만난 사람', '사랑했는데', '난생 처음', '무죄', '마산항엔 비가 내린다', '아빠는 마도로스', '휘뚜루 마뚜루', '나이야 가라', '순천만 연가', '인연의 연가', '인생', '왜 이제 왔어', '인생은 드라마', '봄날은 간다'],
    '심수봉': ['사랑밖에 난 몰라', '백만송이 장미', '그때 그 사람', '미워요', '남자는 배 여자는 항구', '비나리', '여자이니까', '당신은 누구시길래', '무궁화', '나는 어디로', '나의 사계절', '이방인', '아이 러브 유', '축제 이야기', '올 가을엔 사랑할거야', '개여울', '젊은 태양', '사랑의 마음', '그 겨울의 찻집', '알이랑'],
    '이찬원': ['진또배기', '편의점', '힘을 내세요', '시절인연', '메밀꽃 필 무렵', '떠나가는 배', '18세 순이', '울긴 왜 울어', '천년바위', '딱풀', '미운 사내', '남자다잉', '그댈 만나러 갑니다', '남자의 다짐', '쓰리랑', '찬찬히', '삼백초', '진주 조개잡이', '봉선화 연정', '망원동 부르스'],
    '정동원': ['보릿고개', '효도합시다', '여백', '누가 울어', '짝짝꿍짝', '내 마음속 최고', '물망초', '나는 피터팬', '우리 동네', '사랑은 눈물의 씨앗', '아지랑이꽃', '잘가요 내사랑', '청춘시대', '육십령', '잘 될거야', '할아버지 시계', '옆집오빠', '만개', '영원', '다 같이 웃자'],
    // 여기에 더 많은 가수와 노래 추가 가능
};

const cardGrid = document.getElementById('cardGrid');
const searchInput = document.getElementById('searchInput');
const searchButton = document.getElementById('searchButton');

// 한국어 가나다 순 정렬 함수
function koreanSort(a, b) {
    return a.localeCompare(b, 'ko');
}

// 버튼 색상 클래스 배열
const colorClasses = ['color-blue', 'color-purple', 'color-teal', 'color-pink', 'color-orange'];

// 가수 카드를 생성하고 그리드에 추가하는 함수
function displaySingers(singerList) {
    cardGrid.innerHTML = ''; // 기존 카드 제거
    singerList.forEach((singer, index) => {
        const card = document.createElement('div');
        card.classList.add('card');
        
        // 색상 클래스 순환해서 적용
        const colorClass = colorClasses[index % colorClasses.length];
        
        // 이미지 요소 추가 (가수 사진)
        const imageElement = document.createElement('div');
        imageElement.classList.add('card-image');
        imageElement.classList.add(colorClass); // 색상 클래스 추가
        
        // 가수 사진 추가 (이미지 파일이 images/singers/[가수이름].webp 형식으로 저장되어 있다고 가정)
        const imgElement = document.createElement('img');
        imgElement.src = `images/singers/${singer.name}.webp`;
        imgElement.alt = singer.name; // alt 속성 추가 (가수 이름)
        imgElement.width = 50; // width 속성 추가
        imgElement.height = 50; // height 속성 추가
        // 이미지 로드 실패 시 이니셜로 대체
        imgElement.onerror = function() {
            // 이미지 로드 실패 시 이니셜 표시
            const initial = singer.name.charAt(0);
            imageElement.innerHTML = `<span>${initial}</span>`;
            // 이미지 요소 제거
            this.remove();
        };
        imageElement.appendChild(imgElement);
        
        // 가수 이름 추가
        const titleDiv = document.createElement('div');
        titleDiv.classList.add('card-title');
        titleDiv.textContent = singer.name;
        
        // 카드에 이미지와 이름 추가 (버튼 제거)
        card.appendChild(imageElement);
        card.appendChild(titleDiv);
        
        card.dataset.singerId = singer.id; // 데이터 속성으로 ID 저장
        card.dataset.singerName = singer.name; // 데이터 속성으로 이름 저장

        // 카드 클릭 시 상세 페이지로 이동
        card.addEventListener('click', () => {
            window.location.href = `singer.html?name=${encodeURIComponent(singer.name)}`;
        });

        cardGrid.appendChild(card);
    });
}

// 검색 기능 함수 (가수 이름 + 노래 제목 검색)
function filterSingers() {
    const searchTerm = searchInput.value.toLowerCase().trim(); // 양 끝 공백 제거

    if (!searchTerm) {
        // 검색어가 없으면 전체 목록을 정렬하여 표시
        const sortedSingers = [...singers].sort((a, b) => koreanSort(a.name, b.name));
        displaySingers(sortedSingers);
        return;
    }

    const filteredSingers = singers.filter(singer => {
        // 1. 가수 이름 검색
        const nameMatch = singer.name.toLowerCase().includes(searchTerm);

        // 2. 노래 제목 검색
        const songs = songsBySinger[singer.name] || []; // 해당 가수의 노래 목록 가져오기
        const songMatch = songs.some(song => song.toLowerCase().includes(searchTerm));

        return nameMatch || songMatch; // 이름 또는 노래 제목 중 하나라도 맞으면 포함
    });

    // 검색 결과도 가나다 순으로 정렬
    const sortedFilteredSingers = filteredSingers.sort((a, b) => koreanSort(a.name, b.name));
    displaySingers(sortedFilteredSingers);
}

// 검색 버튼 클릭 이벤트
searchButton.addEventListener('click', filterSingers);

// 검색창 입력 시 실시간 검색 실행
searchInput.addEventListener('input', filterSingers);

// 페이지 로드 시 정렬된 전체 가수 표시
const initialSortedSingers = [...singers].sort((a, b) => koreanSort(a.name, b.name));
displaySingers(initialSortedSingers); 